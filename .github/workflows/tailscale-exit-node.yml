name: Tailscale Exit Node Workflow

on:
  workflow_dispatch:  # Manual trigger
  # Add other triggers as needed
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

jobs:
  run-with-tailscale:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
          # Optionally specify tags for this machine
          tags: tag:github-actions
      
      - name: Configure Tailscale to use exit node
        run: |
          # Wait for Tailscale to be fully connected
          sleep 5
          
          # List available exit nodes
          echo "Available exit nodes:"
          tailscale status | grep 'exit node'
          
          # Connect to the exit node (replace EXIT_NODE_NAME with your actual exit node hostname)
          EXIT_NODE_NAME="${{ secrets.TAILSCALE_EXIT_NODE }}"
          tailscale up --exit-node="$EXIT_NODE_NAME" --exit-node-allow-lan-access --reset --operator="$USER"
          
          # Wait for the exit node routing to take effect
          sleep 5
          
          # Verify connection through exit node
          echo "Current Tailscale status:"
          tailscale status
          
          # Verify public IP has changed to the exit node's IP
          echo "Current public IP address:"
          curl -s https://ifconfig.me
      
      - name: Verify HTTP traffic is routed through exit node
        run: |
          # This step confirms that HTTP requests are using the exit node's IP
          echo "Testing HTTP routing..."
          
          # Get current IP from multiple sources to verify
          echo "IP from ifconfig.me:"
          curl -s https://ifconfig.me
          
          echo "IP from ipinfo.io:"
          curl -s https://ipinfo.io/ip
          
          echo "IP from api.ipify.org:"
          curl -s https://api.ipify.org
          
          # Optional: Compare with expected exit node IP range
          # EXPECTED_IP_PREFIX="203.0.113"  # Example prefix
          # CURRENT_IP=$(curl -s https://ifconfig.me)
          # if [[ $CURRENT_IP == $EXPECTED_IP_PREFIX* ]]; then
          #   echo "Success: Traffic is routed through the expected exit node"
          # else
          #   echo "Error: Traffic is not routing through the expected exit node"
          #   exit 1
          # fi
      
      # Your actual workflow steps go here
      - name: Run your workflow commands
        run: |
          echo "Now running commands with HTTP traffic routed through Tailscale exit node"
          # Example: Clone a private repository
          # git clone https://github.com/your-org/private-repo.git
          
          # Example: Make API calls
          # curl -s https://api.your-internal-service.com/endpoint
          
      # Optional: Disconnect from Tailscale at the end
      - name: Disconnect from Tailscale
        if: always()  # Run even if previous steps fail
        run: |
          tailscale down
          echo "Disconnected from Tailscale"
